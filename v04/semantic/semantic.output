Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter_list _RPAREN body

    6 parameter_list: %empty
    7               | params

    8 params: _TYPE _ID
    9       | params _COLON _TYPE _ID

   10 body: _LBRACKET variable_list statement_list _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 vars: _ID
   14     | vars _COLON _ID

   15 $@2: %empty

   16 variable: _TYPE $@2 vars _SEMICOLON

   17 statement_list: %empty
   18               | statement_list statement

   19 statement: compound_statement
   20          | assignment_statement
   21          | if_statement
   22          | do_while_statement
   23          | return_statement

   24 compound_statement: _LBRACKET statement_list _RBRACKET

   25 assignment_statement: ids _ASSIGN num_exp _SEMICOLON

   26 ids: _ID
   27    | ids _ASSIGN _ID

   28 num_exp: exp
   29        | num_exp _AROP exp

   30 inc: %empty
   31    | _INC

   32 exp: literal
   33    | _ID inc
   34    | function_call
   35    | _LPAREN num_exp _RPAREN

   36 literal: _INT_NUMBER
   37        | _UINT_NUMBER

   38 $@3: %empty

   39 function_call: _ID $@3 _LPAREN argument _RPAREN

   40 argument: %empty
   41         | num_exp

   42 if_statement: if_part
   43             | if_part _ELSE statement

   44 if_part: _IF _LPAREN rel_exp _RPAREN statement

   45 do_while_statement: _DO statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

   46 rel_exp: num_exp _RELOP num_exp

   47 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 8 9 16
    _IF (259) 44
    _ELSE (260) 43
    _RETURN (261) 47
    _DO (262) 45
    _WHILE (263) 45
    _ID <s> (264) 5 8 9 13 14 26 27 33 39 45
    _INT_NUMBER <s> (265) 36
    _UINT_NUMBER <s> (266) 37
    _LPAREN (267) 5 35 39 44 45
    _RPAREN (268) 5 35 39 44 45
    _LBRACKET (269) 10 24
    _RBRACKET (270) 10 24
    _ASSIGN (271) 25 27
    _COLON (272) 9 14
    _SEMICOLON (273) 16 25 45 47
    _AROP <i> (274) 29
    _RELOP <i> (275) 45 46
    _INC (276) 31
    ONLY_IF (277)


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    program (24)
        on left: 1
        on right: 0
    function_list (25)
        on left: 2 3
        on right: 1 3
    function (26)
        on left: 5
        on right: 2 3
    $@1 (27)
        on left: 4
        on right: 5
    parameter_list (28)
        on left: 6 7
        on right: 5
    params (29)
        on left: 8 9
        on right: 7 9
    body (30)
        on left: 10
        on right: 5
    variable_list (31)
        on left: 11 12
        on right: 10 12
    vars (32)
        on left: 13 14
        on right: 14 16
    variable (33)
        on left: 16
        on right: 12
    $@2 (34)
        on left: 15
        on right: 16
    statement_list (35)
        on left: 17 18
        on right: 10 18 24
    statement (36)
        on left: 19 20 21 22 23
        on right: 18 43 44 45
    compound_statement (37)
        on left: 24
        on right: 19
    assignment_statement (38)
        on left: 25
        on right: 20
    ids <i> (39)
        on left: 26 27
        on right: 25 27
    num_exp <i> (40)
        on left: 28 29
        on right: 25 29 35 41 46 47
    inc (41)
        on left: 30 31
        on right: 33
    exp <i> (42)
        on left: 32 33 34 35
        on right: 28 29
    literal <i> (43)
        on left: 36 37
        on right: 32 45
    function_call <i> (44)
        on left: 39
        on right: 34
    $@3 (45)
        on left: 38
        on right: 39
    argument <i> (46)
        on left: 40 41
        on right: 39
    if_statement (47)
        on left: 42 43
        on right: 21
    if_part (48)
        on left: 44
        on right: 42 43
    do_while_statement (49)
        on left: 45
        on right: 22
    rel_exp <i> (50)
        on left: 46
        on right: 44
    return_statement (51)
        on left: 47
        on right: 23


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter_list _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter_list _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter_list _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter_list _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter_list)

    parameter_list  go to state 11
    params          go to state 12


State 10

    8 params: _TYPE . _ID

    _ID  shift, and go to state 13


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter_list . _RPAREN body

    _RPAREN  shift, and go to state 14


State 12

    7 parameter_list: params .
    9 params: params . _COLON _TYPE _ID

    _COLON  shift, and go to state 15

    $default  reduce using rule 7 (parameter_list)


State 13

    8 params: _TYPE _ID .

    $default  reduce using rule 8 (params)


State 14

    5 function: _TYPE _ID $@1 _LPAREN parameter_list _RPAREN . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 15

    9 params: params _COLON . _TYPE _ID

    _TYPE  shift, and go to state 18


State 16

   10 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 19


State 17

    5 function: _TYPE _ID $@1 _LPAREN parameter_list _RPAREN body .

    $default  reduce using rule 5 (function)


State 18

    9 params: params _COLON _TYPE . _ID

    _ID  shift, and go to state 20


State 19

   10 body: _LBRACKET variable_list . statement_list _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 21

    $default  reduce using rule 17 (statement_list)

    variable        go to state 22
    statement_list  go to state 23


State 20

    9 params: params _COLON _TYPE _ID .

    $default  reduce using rule 9 (params)


State 21

   16 variable: _TYPE . $@2 vars _SEMICOLON

    $default  reduce using rule 15 ($@2)

    $@2  go to state 24


State 22

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 23

   10 body: _LBRACKET variable_list statement_list . _RBRACKET
   18 statement_list: statement_list . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _DO        shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _RBRACKET  shift, and go to state 30

    statement             go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    ids                   go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    return_statement      go to state 38


State 24

   16 variable: _TYPE $@2 . vars _SEMICOLON

    _ID  shift, and go to state 39

    vars  go to state 40


State 25

   44 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 41


State 26

   47 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 46
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 27

   45 do_while_statement: _DO . statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _DO        shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29

    statement             go to state 50
    compound_statement    go to state 32
    assignment_statement  go to state 33
    ids                   go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    return_statement      go to state 38


State 28

   26 ids: _ID .

    $default  reduce using rule 26 (ids)


State 29

   24 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 51


State 30

   10 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 10 (body)


State 31

   18 statement_list: statement_list statement .

    $default  reduce using rule 18 (statement_list)


State 32

   19 statement: compound_statement .

    $default  reduce using rule 19 (statement)


State 33

   20 statement: assignment_statement .

    $default  reduce using rule 20 (statement)


State 34

   25 assignment_statement: ids . _ASSIGN num_exp _SEMICOLON
   27 ids: ids . _ASSIGN _ID

    _ASSIGN  shift, and go to state 52


State 35

   21 statement: if_statement .

    $default  reduce using rule 21 (statement)


State 36

   42 if_statement: if_part .
   43             | if_part . _ELSE statement

    _ELSE  shift, and go to state 53

    $default  reduce using rule 42 (if_statement)


State 37

   22 statement: do_while_statement .

    $default  reduce using rule 22 (statement)


State 38

   23 statement: return_statement .

    $default  reduce using rule 23 (statement)


State 39

   13 vars: _ID .

    $default  reduce using rule 13 (vars)


State 40

   14 vars: vars . _COLON _ID
   16 variable: _TYPE $@2 vars . _SEMICOLON

    _COLON      shift, and go to state 54
    _SEMICOLON  shift, and go to state 55


State 41

   44 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 56
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49
    rel_exp        go to state 57


State 42

   33 exp: _ID . inc
   39 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _INC  shift, and go to state 58

    _LPAREN   reduce using rule 38 ($@3)
    $default  reduce using rule 30 (inc)

    inc  go to state 59
    $@3  go to state 60


State 43

   36 literal: _INT_NUMBER .

    $default  reduce using rule 36 (literal)


State 44

   37 literal: _UINT_NUMBER .

    $default  reduce using rule 37 (literal)


State 45

   35 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 61
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 46

   29 num_exp: num_exp . _AROP exp
   47 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 62
    _AROP       shift, and go to state 63


State 47

   28 num_exp: exp .

    $default  reduce using rule 28 (num_exp)


State 48

   32 exp: literal .

    $default  reduce using rule 32 (exp)


State 49

   34 exp: function_call .

    $default  reduce using rule 34 (exp)


State 50

   45 do_while_statement: _DO statement . _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 64


State 51

   18 statement_list: statement_list . statement
   24 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _DO        shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _RBRACKET  shift, and go to state 65

    statement             go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    ids                   go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    return_statement      go to state 38


State 52

   25 assignment_statement: ids _ASSIGN . num_exp _SEMICOLON
   27 ids: ids _ASSIGN . _ID

    _ID           shift, and go to state 66
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 67
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 53

   43 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _DO        shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29

    statement             go to state 68
    compound_statement    go to state 32
    assignment_statement  go to state 33
    ids                   go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    return_statement      go to state 38


State 54

   14 vars: vars _COLON . _ID

    _ID  shift, and go to state 69


State 55

   16 variable: _TYPE $@2 vars _SEMICOLON .

    $default  reduce using rule 16 (variable)


State 56

   29 num_exp: num_exp . _AROP exp
   46 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 63
    _RELOP  shift, and go to state 70


State 57

   44 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 71


State 58

   31 inc: _INC .

    $default  reduce using rule 31 (inc)


State 59

   33 exp: _ID inc .

    $default  reduce using rule 33 (exp)


State 60

   39 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 72


State 61

   29 num_exp: num_exp . _AROP exp
   35 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 73
    _AROP    shift, and go to state 63


State 62

   47 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 47 (return_statement)


State 63

   29 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    exp            go to state 74
    literal        go to state 48
    function_call  go to state 49


State 64

   45 do_while_statement: _DO statement _WHILE . _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 75


State 65

   24 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 24 (compound_statement)


State 66

   27 ids: ids _ASSIGN _ID .
   33 exp: _ID . inc
   39 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _INC  shift, and go to state 58

    _LPAREN   reduce using rule 38 ($@3)
    _ASSIGN   reduce using rule 27 (ids)
    $default  reduce using rule 30 (inc)

    inc  go to state 59
    $@3  go to state 60


State 67

   25 assignment_statement: ids _ASSIGN num_exp . _SEMICOLON
   29 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 76
    _AROP       shift, and go to state 63


State 68

   43 if_statement: if_part _ELSE statement .

    $default  reduce using rule 43 (if_statement)


State 69

   14 vars: vars _COLON _ID .

    $default  reduce using rule 14 (vars)


State 70

   46 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 77
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 71

   44 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _DO        shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29

    statement             go to state 78
    compound_statement    go to state 32
    assignment_statement  go to state 33
    ids                   go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    do_while_statement    go to state 37
    return_statement      go to state 38


State 72

   39 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    $default  reduce using rule 40 (argument)

    num_exp        go to state 79
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49
    argument       go to state 80


State 73

   35 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 35 (exp)


State 74

   29 num_exp: num_exp _AROP exp .

    $default  reduce using rule 29 (num_exp)


State 75

   45 do_while_statement: _DO statement _WHILE _LPAREN . _ID _RELOP literal _RPAREN _SEMICOLON

    _ID  shift, and go to state 81


State 76

   25 assignment_statement: ids _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 25 (assignment_statement)


State 77

   29 num_exp: num_exp . _AROP exp
   46 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 63

    $default  reduce using rule 46 (rel_exp)


State 78

   44 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 44 (if_part)


State 79

   29 num_exp: num_exp . _AROP exp
   41 argument: num_exp .

    _AROP  shift, and go to state 63

    $default  reduce using rule 41 (argument)


State 80

   39 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 82


State 81

   45 do_while_statement: _DO statement _WHILE _LPAREN _ID . _RELOP literal _RPAREN _SEMICOLON

    _RELOP  shift, and go to state 83


State 82

   39 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 39 (function_call)


State 83

   45 do_while_statement: _DO statement _WHILE _LPAREN _ID _RELOP . literal _RPAREN _SEMICOLON

    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44

    literal  go to state 84


State 84

   45 do_while_statement: _DO statement _WHILE _LPAREN _ID _RELOP literal . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 85


State 85

   45 do_while_statement: _DO statement _WHILE _LPAREN _ID _RELOP literal _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 86


State 86

   45 do_while_statement: _DO statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON .

    $default  reduce using rule 45 (do_while_statement)
