Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 body: _LBRACKET variable_list statement_list _RBRACKET

    9 variable_list: %empty
   10              | variable_list variable

   11 variable: _TYPE _ID _SEMICOLON

   12 statement_list: %empty
   13               | statement_list statement

   14 statement: compound_statement
   15          | assignment_statement
   16          | if_statement
   17          | return_statement
   18          | branch_statement
   19          | switch_statement

   20 return_statement: _RETURN num_exp _SEMICOLON
   21                 | _RETURN _SEMICOLON

   22 $@2: %empty

   23 switch_statement: _SWITCH _LPAREN _ID $@2 _RPAREN _LBRACKET case_statements default_statement _RBRACKET

   24 case_statements: case_statement
   25                | case_statements case_statement

   26 $@3: %empty

   27 case_statement: _CASE literal _COLON $@3 statement break_statement

   28 break_statement: %empty
   29                | _BREAK _SEMICOLON

   30 default_statement: %empty
   31                  | _DEFAULT _COLON statement

   32 $@4: %empty

   33 $@5: %empty

   34 $@6: %empty

   35 $@7: %empty

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

   37 compound_statement: _LBRACKET statement_list _RBRACKET

   38 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   39 num_exp: exp
   40        | num_exp _AROP exp

   41 exp: literal
   42    | _ID
   43    | function_call
   44    | _LPAREN num_exp _RPAREN

   45 literal: _INT_NUMBER
   46        | _UINT_NUMBER

   47 $@8: %empty

   48 function_call: _ID $@8 _LPAREN argument _RPAREN

   49 argument: %empty
   50         | num_exp

   51 if_statement: if_part
   52             | if_part _ELSE statement

   53 if_part: _IF _LPAREN rel_exp _RPAREN statement

   54 rel_exp: num_exp _RELOP num_exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 7 11
    _IF (259) 53
    _ELSE (260) 52
    _RETURN (261) 20 21
    _BRANCH (262) 36
    _FIRST (263) 36
    _SECOND (264) 36
    _THIRD (265) 36
    _OTHERWISE (266) 36
    _COMMA (267) 36
    _SWITCH (268) 23
    _CASE (269) 27
    _BREAK (270) 29
    _DEFAULT (271) 31
    _COLON (272) 27 31
    _ID <s> (273) 5 7 11 23 36 38 42 48
    _INT_NUMBER <s> (274) 45
    _UINT_NUMBER <s> (275) 46
    _LPAREN (276) 5 23 36 44 48 53
    _RPAREN (277) 5 23 36 44 48 53
    _LBRACKET (278) 8 23 37
    _RBRACKET (279) 8 23 37
    _ASSIGN (280) 38
    _SEMICOLON (281) 11 20 21 29 36 38
    _AROP <i> (282) 40
    _RELOP <i> (283) 54
    ONLY_IF (284)


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    program (31)
        on left: 1
        on right: 0
    function_list (32)
        on left: 2 3
        on right: 1 3
    function (33)
        on left: 5
        on right: 2 3
    $@1 (34)
        on left: 4
        on right: 5
    parameter (35)
        on left: 6 7
        on right: 5
    body (36)
        on left: 8
        on right: 5
    variable_list (37)
        on left: 9 10
        on right: 8 10
    variable (38)
        on left: 11
        on right: 10
    statement_list (39)
        on left: 12 13
        on right: 8 13 37
    statement (40)
        on left: 14 15 16 17 18 19
        on right: 13 27 31 36 52 53
    return_statement (41)
        on left: 20 21
        on right: 17
    switch_statement (42)
        on left: 23
        on right: 19
    $@2 (43)
        on left: 22
        on right: 23
    case_statements (44)
        on left: 24 25
        on right: 23 25
    case_statement (45)
        on left: 27
        on right: 24 25
    $@3 (46)
        on left: 26
        on right: 27
    break_statement (47)
        on left: 28 29
        on right: 27
    default_statement (48)
        on left: 30 31
        on right: 23
    branch_statement (49)
        on left: 36
        on right: 18
    $@4 (50)
        on left: 32
        on right: 36
    $@5 (51)
        on left: 33
        on right: 36
    $@6 (52)
        on left: 34
        on right: 36
    $@7 (53)
        on left: 35
        on right: 36
    compound_statement (54)
        on left: 37
        on right: 14
    assignment_statement (55)
        on left: 38
        on right: 15
    num_exp <i> (56)
        on left: 39 40
        on right: 20 38 40 44 50 54
    exp <i> (57)
        on left: 41 42 43 44
        on right: 39 40
    literal <i> (58)
        on left: 45 46
        on right: 27 36 41
    function_call <i> (59)
        on left: 48
        on right: 43
    $@8 (60)
        on left: 47
        on right: 48
    argument <i> (61)
        on left: 49 50
        on right: 48
    if_statement (62)
        on left: 51 52
        on right: 16
    if_part (63)
        on left: 53
        on right: 51 52
    rel_exp <i> (64)
        on left: 54
        on right: 53


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    8 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 9 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    8 body: _LBRACKET variable_list . statement_list _RBRACKET
   10 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 12 (statement_list)

    variable        go to state 18
    statement_list  go to state 19


State 17

   11 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 20


State 18

   10 variable_list: variable_list variable .

    $default  reduce using rule 10 (variable_list)


State 19

    8 body: _LBRACKET variable_list statement_list . _RBRACKET
   13 statement_list: statement_list . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _BRANCH    shift, and go to state 23
    _SWITCH    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 27

    statement             go to state 28
    return_statement      go to state 29
    switch_statement      go to state 30
    branch_statement      go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35


State 20

   11 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 36


State 21

   53 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 37


State 22

   20 return_statement: _RETURN . num_exp _SEMICOLON
   21                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41
    _SEMICOLON    shift, and go to state 42

    num_exp        go to state 43
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46


State 23

   36 branch_statement: _BRANCH . _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _LPAREN  shift, and go to state 47


State 24

   23 switch_statement: _SWITCH . _LPAREN _ID $@2 _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _LPAREN  shift, and go to state 48


State 25

   38 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 49


State 26

   37 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 12 (statement_list)

    statement_list  go to state 50


State 27

    8 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 8 (body)


State 28

   13 statement_list: statement_list statement .

    $default  reduce using rule 13 (statement_list)


State 29

   17 statement: return_statement .

    $default  reduce using rule 17 (statement)


State 30

   19 statement: switch_statement .

    $default  reduce using rule 19 (statement)


State 31

   18 statement: branch_statement .

    $default  reduce using rule 18 (statement)


State 32

   14 statement: compound_statement .

    $default  reduce using rule 14 (statement)


State 33

   15 statement: assignment_statement .

    $default  reduce using rule 15 (statement)


State 34

   16 statement: if_statement .

    $default  reduce using rule 16 (statement)


State 35

   51 if_statement: if_part .
   52             | if_part . _ELSE statement

    _ELSE  shift, and go to state 51

    $default  reduce using rule 51 (if_statement)


State 36

   11 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 11 (variable)


State 37

   53 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 52
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46
    rel_exp        go to state 53


State 38

   42 exp: _ID .
   48 function_call: _ID . $@8 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 47 ($@8)
    $default  reduce using rule 42 (exp)

    $@8  go to state 54


State 39

   45 literal: _INT_NUMBER .

    $default  reduce using rule 45 (literal)


State 40

   46 literal: _UINT_NUMBER .

    $default  reduce using rule 46 (literal)


State 41

   44 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 55
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46


State 42

   21 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 21 (return_statement)


State 43

   20 return_statement: _RETURN num_exp . _SEMICOLON
   40 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 56
    _AROP       shift, and go to state 57


State 44

   39 num_exp: exp .

    $default  reduce using rule 39 (num_exp)


State 45

   41 exp: literal .

    $default  reduce using rule 41 (exp)


State 46

   43 exp: function_call .

    $default  reduce using rule 43 (exp)


State 47

   36 branch_statement: _BRANCH _LPAREN . _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _ID  shift, and go to state 58


State 48

   23 switch_statement: _SWITCH _LPAREN . _ID $@2 _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _ID  shift, and go to state 59


State 49

   38 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 60
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46


State 50

   13 statement_list: statement_list . statement
   37 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _BRANCH    shift, and go to state 23
    _SWITCH    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 61

    statement             go to state 28
    return_statement      go to state 29
    switch_statement      go to state 30
    branch_statement      go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35


State 51

   52 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _BRANCH    shift, and go to state 23
    _SWITCH    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 62
    return_statement      go to state 29
    switch_statement      go to state 30
    branch_statement      go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35


State 52

   40 num_exp: num_exp . _AROP exp
   54 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 57
    _RELOP  shift, and go to state 63


State 53

   53 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 64


State 54

   48 function_call: _ID $@8 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 65


State 55

   40 num_exp: num_exp . _AROP exp
   44 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 66
    _AROP    shift, and go to state 57


State 56

   20 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 20 (return_statement)


State 57

   40 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    exp            go to state 67
    literal        go to state 45
    function_call  go to state 46


State 58

   36 branch_statement: _BRANCH _LPAREN _ID . $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    $default  reduce using rule 32 ($@4)

    $@4  go to state 68


State 59

   23 switch_statement: _SWITCH _LPAREN _ID . $@2 _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    $default  reduce using rule 22 ($@2)

    $@2  go to state 69


State 60

   38 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   40 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 70
    _AROP       shift, and go to state 57


State 61

   37 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 37 (compound_statement)


State 62

   52 if_statement: if_part _ELSE statement .

    $default  reduce using rule 52 (if_statement)


State 63

   54 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 71
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46


State 64

   53 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _BRANCH    shift, and go to state 23
    _SWITCH    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 72
    return_statement      go to state 29
    switch_statement      go to state 30
    branch_statement      go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35


State 65

   48 function_call: _ID $@8 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    $default  reduce using rule 49 (argument)

    num_exp        go to state 73
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46
    argument       go to state 74


State 66

   44 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 44 (exp)


State 67

   40 num_exp: num_exp _AROP exp .

    $default  reduce using rule 40 (num_exp)


State 68

   36 branch_statement: _BRANCH _LPAREN _ID $@4 . _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _SEMICOLON  shift, and go to state 75


State 69

   23 switch_statement: _SWITCH _LPAREN _ID $@2 . _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _RPAREN  shift, and go to state 76


State 70

   38 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 38 (assignment_statement)


State 71

   40 num_exp: num_exp . _AROP exp
   54 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 57

    $default  reduce using rule 54 (rel_exp)


State 72

   53 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 53 (if_part)


State 73

   40 num_exp: num_exp . _AROP exp
   50 argument: num_exp .

    _AROP  shift, and go to state 57

    $default  reduce using rule 50 (argument)


State 74

   48 function_call: _ID $@8 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 77


State 75

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON . literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40

    literal  go to state 78


State 76

   23 switch_statement: _SWITCH _LPAREN _ID $@2 _RPAREN . _LBRACKET case_statements default_statement _RBRACKET

    _LBRACKET  shift, and go to state 79


State 77

   48 function_call: _ID $@8 _LPAREN argument _RPAREN .

    $default  reduce using rule 48 (function_call)


State 78

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal . $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    $default  reduce using rule 33 ($@5)

    $@5  go to state 80


State 79

   23 switch_statement: _SWITCH _LPAREN _ID $@2 _RPAREN _LBRACKET . case_statements default_statement _RBRACKET

    _CASE  shift, and go to state 81

    case_statements  go to state 82
    case_statement   go to state 83


State 80

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 . _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _COMMA  shift, and go to state 84


State 81

   27 case_statement: _CASE . literal _COLON $@3 statement break_statement

    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40

    literal  go to state 85


State 82

   23 switch_statement: _SWITCH _LPAREN _ID $@2 _RPAREN _LBRACKET case_statements . default_statement _RBRACKET
   25 case_statements: case_statements . case_statement

    _CASE     shift, and go to state 81
    _DEFAULT  shift, and go to state 86

    $default  reduce using rule 30 (default_statement)

    case_statement     go to state 87
    default_statement  go to state 88


State 83

   24 case_statements: case_statement .

    $default  reduce using rule 24 (case_statements)


State 84

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA . literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40

    literal  go to state 89


State 85

   27 case_statement: _CASE literal . _COLON $@3 statement break_statement

    _COLON  shift, and go to state 90


State 86

   31 default_statement: _DEFAULT . _COLON statement

    _COLON  shift, and go to state 91


State 87

   25 case_statements: case_statements case_statement .

    $default  reduce using rule 25 (case_statements)


State 88

   23 switch_statement: _SWITCH _LPAREN _ID $@2 _RPAREN _LBRACKET case_statements default_statement . _RBRACKET

    _RBRACKET  shift, and go to state 92


State 89

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal . $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    $default  reduce using rule 34 ($@6)

    $@6  go to state 93


State 90

   27 case_statement: _CASE literal _COLON . $@3 statement break_statement

    $default  reduce using rule 26 ($@3)

    $@3  go to state 94


State 91

   31 default_statement: _DEFAULT _COLON . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _BRANCH    shift, and go to state 23
    _SWITCH    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 95
    return_statement      go to state 29
    switch_statement      go to state 30
    branch_statement      go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35


State 92

   23 switch_statement: _SWITCH _LPAREN _ID $@2 _RPAREN _LBRACKET case_statements default_statement _RBRACKET .

    $default  reduce using rule 23 (switch_statement)


State 93

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 . _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _COMMA  shift, and go to state 96


State 94

   27 case_statement: _CASE literal _COLON $@3 . statement break_statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _BRANCH    shift, and go to state 23
    _SWITCH    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 97
    return_statement      go to state 29
    switch_statement      go to state 30
    branch_statement      go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35


State 95

   31 default_statement: _DEFAULT _COLON statement .

    $default  reduce using rule 31 (default_statement)


State 96

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA . literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40

    literal  go to state 98


State 97

   27 case_statement: _CASE literal _COLON $@3 statement . break_statement

    _BREAK  shift, and go to state 99

    $default  reduce using rule 28 (break_statement)

    break_statement  go to state 100


State 98

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal . $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    $default  reduce using rule 35 ($@7)

    $@7  go to state 101


State 99

   29 break_statement: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 102


State 100

   27 case_statement: _CASE literal _COLON $@3 statement break_statement .

    $default  reduce using rule 27 (case_statement)


State 101

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 . _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _RPAREN  shift, and go to state 103


State 102

   29 break_statement: _BREAK _SEMICOLON .

    $default  reduce using rule 29 (break_statement)


State 103

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN . _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _FIRST  shift, and go to state 104


State 104

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST . statement _SECOND statement _THIRD statement _OTHERWISE statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _BRANCH    shift, and go to state 23
    _SWITCH    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 105
    return_statement      go to state 29
    switch_statement      go to state 30
    branch_statement      go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35


State 105

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement . _SECOND statement _THIRD statement _OTHERWISE statement

    _SECOND  shift, and go to state 106


State 106

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND . statement _THIRD statement _OTHERWISE statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _BRANCH    shift, and go to state 23
    _SWITCH    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 107
    return_statement      go to state 29
    switch_statement      go to state 30
    branch_statement      go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35


State 107

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement . _THIRD statement _OTHERWISE statement

    _THIRD  shift, and go to state 108


State 108

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD . statement _OTHERWISE statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _BRANCH    shift, and go to state 23
    _SWITCH    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 109
    return_statement      go to state 29
    switch_statement      go to state 30
    branch_statement      go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35


State 109

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement . _OTHERWISE statement

    _OTHERWISE  shift, and go to state 110


State 110

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _BRANCH    shift, and go to state 23
    _SWITCH    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 111
    return_statement      go to state 29
    switch_statement      go to state 30
    branch_statement      go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35


State 111

   36 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON literal $@5 _COMMA literal $@6 _COMMA literal $@7 _RPAREN _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement .

    $default  reduce using rule 36 (branch_statement)
